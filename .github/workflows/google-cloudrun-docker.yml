name: CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 1) 소스코드 체크아웃
      - name: 📥 Checkout Repository
        uses: actions/checkout@v3

      # 2) Google Cloud 인증 (서비스 계정 JSON 사용)
      - name: 🔑 Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # 3) gcloud CLI 설치 및 프로젝트 설정
      - name: 🔧 Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # 4) Docker 인증 설정
      - name: 🐳 Configure Docker
        run: gcloud auth configure-docker asia-northeast3-docker.pkg.dev

      # 5) 서버 이미지 빌드 & 푸시
      - name: 🏗 Build and Push Server Docker Image
        run: |
          echo "Using project ID: ${{ secrets.GCP_PROJECT_ID }}"
          if [[ -z "${{ secrets.GCP_PROJECT_ID }}" ]]; then
            echo "❌ ERROR: GCP_PROJECT_ID is empty!"
            exit 1
          fi
          
          cd server
          # multi-platform 빌드 시 --platform 플래그와 --push를 함께 사용해야 합니다.
          docker buildx build \
                --platform linux/amd64 -t asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-server/server:latest \
                --push \
                -f Dockerfile .

      # 6) 클라이언트 이미지 빌드 & 푸시
      - name: 🏗 Build and Push Client Docker Image
        run: |
          cd client
          docker build -t asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-server/client:latest -f Dockerfile .
          docker push asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-server/client:latest

      # 7) gke-gcloud-auth-plugin 설치
      - name: 🔧 Install gke-gcloud-auth-plugin
        run: gcloud components install gke-gcloud-auth-plugin --quiet

      # 11) 서버 이미지 Cloud Run에 배포 (최종 단계)
      - name: 🚀 Deploy Server to Cloud Run
        run: |
          gcloud run deploy my-server \
            --image asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-server/server:latest \
            --platform managed \
            --region asia-northeast3 \
            --port 3001 \
            --allow-unauthenticated
            
      # 10) 클라이언트 이미지 Cloud Run에 배포
      - name: 🚀 Deploy Client to Cloud Run
        run: |
          gcloud run deploy my-client \
            --image asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-server/client:latest \
            --platform managed \
            --region asia-northeast3 \
            --port 8081 \
            --allow-unauthenticated
